(set-logic QF_LRA)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun A0 () Bool)
(declare-fun A3 () Bool)
(declare-fun A4 () Bool)
(declare-fun A5 () Bool)
(declare-fun A6 () Bool)
(declare-fun A7 () Bool)
(assert (let ((.def_0 (not A4))) (let ((.def_1 (* (/ 428107899254315 562949953421312) x8))) (let ((.def_2 (* (/ 2297130166877649 4503599627370496) x3))) (let ((.def_3 (* (- (/ 1086656380680789 2251799813685248)) x2))) (let ((.def_4 (* (/ 625017623380637 4503599627370496) x9))) (let ((.def_5 (+ .def_4 .def_3 .def_2 .def_1))) (let ((.def_6 (< .def_5 (- (/ 2334389240265625 1125899906842624))))) (let ((.def_7 (not .def_6))) (let ((.def_8 (or .def_7 .def_0))) (let ((.def_9 (not .def_8))) (let ((.def_10 (not A3))) (let ((.def_11 (* (- (/ 3208978246554521 4503599627370496)) x5))) (let ((.def_12 (* (- (/ 89572663507915 2251799813685248)) x4))) (let ((.def_13 (* (/ 677862937499853 2251799813685248) x9))) (let ((.def_14 (* (- (/ 608827682177153 4503599627370496)) x7))) (let ((.def_15 (+ .def_14 .def_13 .def_12 .def_11))) (let ((.def_16 (< .def_15 (- (/ 727499326830113 281474976710656))))) (let ((.def_17 (not .def_16))) (let ((.def_18 (or .def_17 .def_10))) (let ((.def_19 (and .def_18 .def_9))) (let ((.def_20 (* (/ 121234309340729 1125899906842624) x1))) (let ((.def_21 (* (/ 939104106399507 2251799813685248) x6))) (let ((.def_22 (* (/ 2996663371903093 4503599627370496) x2))) (let ((.def_23 (+ .def_22 .def_21 .def_20))) (let ((.def_24 (< .def_23 (/ 183809714181491 562949953421312)))) (let ((.def_25 (not .def_24))) (let ((.def_26 (* (/ 1567489274576791 4503599627370496) x1))) (let ((.def_27 (* (/ 1259250482587617 2251799813685248) x2))) (let ((.def_28 (* (/ 1246792015651795 4503599627370496) x8))) (let ((.def_29 (+ .def_28 .def_27 .def_26))) (let ((.def_30 (< .def_29 (/ 2891175480539197 1125899906842624)))) (let ((.def_31 (= .def_30 .def_25))) (let ((.def_32 (not A5))) (let ((.def_33 (or A0 .def_32))) (let ((.def_34 (not .def_33))) (let ((.def_35 (and .def_34 .def_31))) (let ((.def_36 (not .def_35))) (let ((.def_37 (and .def_36 .def_19))) (let ((.def_38 (not .def_37))) (let ((.def_39 (* (- (/ 565997432740271 1125899906842624)) x1))) (let ((.def_40 (* (- (/ 3136071089608321 4503599627370496)) x7))) (let ((.def_41 (+ .def_40 .def_39))) (let ((.def_42 (< .def_41 (- (/ 2737939625218211 2251799813685248))))) (let ((.def_43 (not .def_42))) (let ((.def_44 (* (/ 373972674052865 562949953421312) x6))) (let ((.def_45 (* (/ 1346360905307793 2251799813685248) x2))) (let ((.def_46 (* (- (/ 956220151803373 2251799813685248)) x4))) (let ((.def_47 (* (- (/ 2411158898066483 4503599627370496)) x0))) (let ((.def_48 (+ .def_47 .def_46 .def_45 .def_44))) (let ((.def_49 (< .def_48 (- (/ 2262889865934789 1125899906842624))))) (let ((.def_50 (not .def_49))) (let ((.def_51 (or .def_50 .def_43))) (let ((.def_52 (not .def_51))) (let ((.def_53 (* (/ 482549787467351 2251799813685248) x6))) (let ((.def_54 (* (- (/ 2478207759423157 4503599627370496)) x5))) (let ((.def_55 (* (/ 3466455533218193 4503599627370496) x1))) (let ((.def_56 (* (- (/ 3961431090801171 4503599627370496)) x2))) (let ((.def_57 (* (/ 3269689954381345 4503599627370496) x7))) (let ((.def_58 (* (/ 394591525687525 562949953421312) x8))) (let ((.def_59 (+ .def_58 .def_57 .def_56 .def_55 .def_54 .def_53))) (let ((.def_60 (< .def_59 (- (/ 5744126991789195 1125899906842624))))) (let ((.def_61 (* (- (/ 489242839526295 1125899906842624)) x5))) (let ((.def_62 (* (- (/ 192057647194829 4503599627370496)) x4))) (let ((.def_63 (* (/ 4083874615780707 4503599627370496) x7))) (let ((.def_64 (* (- (/ 635094909716051 1125899906842624)) x9))) (let ((.def_65 (* (- (/ 2032967731318595 4503599627370496)) x3))) (let ((.def_66 (* (- (/ 2229208674400707 4503599627370496)) x1))) (let ((.def_67 (* (- (/ 1313025545629973 2251799813685248)) x6))) (let ((.def_68 (* (- (/ 3990572688790251 4503599627370496)) x8))) (let ((.def_69 (* (/ 2703954191515203 4503599627370496) x0))) (let ((.def_70 (+ .def_69 .def_68 .def_67 .def_66 .def_65 .def_64 .def_63 .def_62 .def_61))) (let ((.def_71 (< .def_70 (/ 3099026848234751 562949953421312)))) (let ((.def_72 (not .def_71))) (let ((.def_73 (or .def_72 .def_60))) (let ((.def_74 (and .def_73 .def_52))) (let ((.def_75 (not .def_74))) (let ((.def_76 (* (- (/ 1925092221308089 2251799813685248)) x2))) (let ((.def_77 (* (/ 3599505458658865 4503599627370496) x4))) (let ((.def_78 (* (/ 1164725519511239 2251799813685248) x9))) (let ((.def_79 (* (- (/ 142071385874467 2251799813685248)) x1))) (let ((.def_80 (* (- (/ 433797031248697 4503599627370496)) x3))) (let ((.def_81 (+ .def_80 .def_79 .def_78 .def_77 .def_76))) (let ((.def_82 (< .def_81 (/ 1340413977600473 562949953421312)))) (let ((.def_83 (* (/ 272239052568699 4503599627370496) x0))) (let ((.def_84 (* (- (/ 1122096065893327 2251799813685248)) x6))) (let ((.def_85 (* (- (/ 2824487617517781 4503599627370496)) x2))) (let ((.def_86 (* (- (/ 2347923025451113 4503599627370496)) x3))) (let ((.def_87 (* (/ 64596015619939 140737488355328) x9))) (let ((.def_88 (+ .def_87 .def_86 .def_85 .def_84 .def_83))) (let ((.def_89 (< .def_88 (/ 651675608838007 281474976710656)))) (let ((.def_90 (or .def_89 .def_82))) (let ((.def_91 (* (- (/ 143704213948143 562949953421312)) x8))) (let ((.def_92 (* (/ 3587084761264473 4503599627370496) x3))) (let ((.def_93 (* (/ 11547635331207 281474976710656) x1))) (let ((.def_94 (* (- (/ 1443574358554321 4503599627370496)) x4))) (let ((.def_95 (* (- (/ 3384247431216705 4503599627370496)) x9))) (let ((.def_96 (* (- (/ 107388294772077 562949953421312)) x2))) (let ((.def_97 (* (/ 1821738502187537 4503599627370496) x0))) (let ((.def_98 (* (- (/ 1758347384995029 4503599627370496)) x7))) (let ((.def_99 (* (/ 650156760155609 1125899906842624) x5))) (let ((.def_100 (* (- (/ 1653374196188807 4503599627370496)) x6))) (let ((.def_101 (+ .def_100 .def_99 .def_98 .def_97 .def_96 .def_95 .def_94 .def_93 .def_92 .def_91))) (let ((.def_102 (< .def_101 (- (/ 1921843407674857 281474976710656))))) (let ((.def_103 (* (- (/ 68841656478367 140737488355328)) x4))) (let ((.def_104 (* (/ 2806979651964119 4503599627370496) x7))) (let ((.def_105 (* (- (/ 250861842306039 1125899906842624)) x6))) (let ((.def_106 (* (- (/ 229835752354911 4503599627370496)) x5))) (let ((.def_107 (* (/ 874022375407001 4503599627370496) x2))) (let ((.def_108 (* (- (/ 1954845484572321 4503599627370496)) x0))) (let ((.def_109 (+ .def_108 .def_107 .def_106 .def_105 .def_104 .def_103))) (let ((.def_110 (< .def_109 (- (/ 3146782238055425 562949953421312))))) (let ((.def_111 (or .def_110 .def_102))) (let ((.def_112 (not .def_111))) (let ((.def_113 (and .def_112 .def_90))) (let ((.def_114 (not .def_113))) (let ((.def_115 (or .def_114 .def_75))) (let ((.def_116 (and .def_115 .def_38))) (let ((.def_117 (not .def_116))) (let ((.def_118 (* (- (/ 1408225656762291 4503599627370496)) x5))) (let ((.def_119 (* (- (/ 109328655677871 562949953421312)) x7))) (let ((.def_120 (+ .def_119 .def_118))) (let ((.def_121 (< .def_120 (- (/ 2867091633848517 2251799813685248))))) (let ((.def_122 (not A6))) (let ((.def_123 (or .def_122 .def_121))) (let ((.def_124 (not .def_123))) (let ((.def_125 (* (- (/ 14307901108037 562949953421312)) x3))) (let ((.def_126 (* (/ 429184411790457 2251799813685248) x8))) (let ((.def_127 (* (- (/ 2787853307083633 4503599627370496)) x5))) (let ((.def_128 (* (/ 2649989990814603 4503599627370496) x9))) (let ((.def_129 (* (- (/ 1109535128538713 1125899906842624)) x7))) (let ((.def_130 (+ .def_129 .def_128 .def_127 .def_126 .def_125))) (let ((.def_131 (< .def_130 (- (/ 7215584545542535 2251799813685248))))) (let ((.def_132 (and A7 .def_131))) (let ((.def_133 (and .def_132 .def_124))) (let ((.def_134 (* (/ 3053898280345193 4503599627370496) x1))) (let ((.def_135 (* (/ 3269877871997891 4503599627370496) x2))) (let ((.def_136 (* (/ 1930163169203569 4503599627370496) x9))) (let ((.def_137 (* (- (/ 3451233113924151 4503599627370496)) x0))) (let ((.def_138 (+ .def_137 .def_136 .def_135 .def_134))) (let ((.def_139 (< .def_138 (- (/ 3925477371571923 1125899906842624))))) (let ((.def_140 (not .def_139))) (let ((.def_141 (or .def_140 A4))) (let ((.def_142 (or .def_0 A3))) (let ((.def_143 (not .def_142))) (let ((.def_144 (or .def_143 .def_141))) (let ((.def_145 (or .def_144 .def_133))) (let ((.def_146 (* (- (/ 2105941990470975 4503599627370496)) x8))) (let ((.def_147 (* (/ 4086986417576765 4503599627370496) x7))) (let ((.def_148 (* (- (/ 562269050423653 562949953421312)) x5))) (let ((.def_149 (* (/ 75757145822823 2251799813685248) x2))) (let ((.def_150 (* (/ 1217391000415071 2251799813685248) x1))) (let ((.def_151 (* (/ 442288336078685 1125899906842624) x9))) (let ((.def_152 (* (- (/ 982215386040501 1125899906842624)) x4))) (let ((.def_153 (* (/ 4080596257611853 4503599627370496) x3))) (let ((.def_154 (+ .def_153 .def_152 .def_151 .def_150 .def_149 .def_148 .def_147 .def_146))) (let ((.def_155 (< .def_154 (/ 1378020657935363 281474976710656)))) (let ((.def_156 (and .def_155 .def_0))) (let ((.def_157 (* (/ 6381248505913 35184372088832) x0))) (let ((.def_158 (* (/ 117606940711863 281474976710656) x2))) (let ((.def_159 (* (- (/ 468655864456309 562949953421312)) x4))) (let ((.def_160 (+ .def_159 .def_158 .def_157))) (let ((.def_161 (< .def_160 (/ 2126287112661043 1125899906842624)))) (let ((.def_162 (not .def_161))) (let ((.def_163 (or A5 .def_162))) (let ((.def_164 (not .def_163))) (let ((.def_165 (and .def_164 .def_156))) (let ((.def_166 (not .def_165))) (let ((.def_167 (* (- (/ 2178768646518043 4503599627370496)) x1))) (let ((.def_168 (< .def_167 (- (/ 2129285168462257 4503599627370496))))) (let ((.def_169 (* (/ 2041673209071991 4503599627370496) x1))) (let ((.def_170 (* (/ 2002210955608591 4503599627370496) x9))) (let ((.def_171 (* (- (/ 121866216804909 2251799813685248)) x4))) (let ((.def_172 (* (/ 184473126215767 562949953421312) x0))) (let ((.def_173 (* (/ 95174247412545 140737488355328) x8))) (let ((.def_174 (* (- (/ 234240738033175 562949953421312)) x5))) (let ((.def_175 (* (/ 2059905170749109 4503599627370496) x6))) (let ((.def_176 (+ .def_175 .def_174 .def_173 .def_172 .def_171 .def_170 .def_169))) (let ((.def_177 (< .def_176 (/ 965303296593893 562949953421312)))) (let ((.def_178 (= .def_177 .def_168))) (let ((.def_179 (not .def_178))) (let ((.def_180 (* (- (/ 3814333408384101 4503599627370496)) x3))) (let ((.def_181 (* (/ 116368733980075 281474976710656) x2))) (let ((.def_182 (* (- (/ 2777694683217863 4503599627370496)) x0))) (let ((.def_183 (* (/ 143018425023759 4503599627370496) x1))) (let ((.def_184 (* (/ 1458735720915747 4503599627370496) x4))) (let ((.def_185 (* (- (/ 2145310727574005 2251799813685248)) x8))) (let ((.def_186 (+ .def_185 .def_184 .def_183 .def_182 .def_181 .def_180))) (let ((.def_187 (< .def_186 (- (/ 386412501378371 562949953421312))))) (let ((.def_188 (or .def_187 .def_32))) (let ((.def_189 (not .def_188))) (let ((.def_190 (or .def_189 .def_179))) (let ((.def_191 (or .def_190 .def_166))) (let ((.def_192 (and .def_191 .def_145))) (let ((.def_193 (or .def_192 .def_117))) (let ((.def_194 (<= x9 1.0))) (let ((.def_195 (<= 0.0 x9))) (let ((.def_196 (<= x8 1.0))) (let ((.def_197 (<= 0.0 x8))) (let ((.def_198 (<= x7 1.0))) (let ((.def_199 (<= 0.0 x7))) (let ((.def_200 (<= x6 1.0))) (let ((.def_201 (<= 0.0 x6))) (let ((.def_202 (<= x5 1.0))) (let ((.def_203 (<= 0.0 x5))) (let ((.def_204 (<= x4 1.0))) (let ((.def_205 (<= 0.0 x4))) (let ((.def_206 (<= x3 1.0))) (let ((.def_207 (<= 0.0 x3))) (let ((.def_208 (<= x2 1.0))) (let ((.def_209 (<= 0.0 x2))) (let ((.def_210 (<= x1 1.0))) (let ((.def_211 (<= 0.0 x1))) (let ((.def_212 (<= x0 1.0))) (let ((.def_213 (<= 0.0 x0))) (let ((.def_214 (and .def_213 .def_212 .def_211 .def_210 .def_209 .def_208 .def_207 .def_206 .def_205 .def_204 .def_203 .def_202 .def_201 .def_200 .def_199 .def_198 .def_197 .def_196 .def_195 .def_194 .def_193))) .def_214))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
