(set-logic QF_LRA)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun A2 () Bool)
(declare-fun A3 () Bool)
(declare-fun A5 () Bool)
(declare-fun A7 () Bool)
(declare-fun A8 () Bool)
(declare-fun A9 () Bool)
(assert (let ((.def_0 (* (- (/ 822617541893359 2251799813685248)) x6))) (let ((.def_1 (* (- (/ 443245743176309 562949953421312)) x4))) (let ((.def_2 (* (/ 536302031664907 1125899906842624) x0))) (let ((.def_3 (* (/ 938095150963709 4503599627370496) x9))) (let ((.def_4 (* (/ 621182733261921 1125899906842624) x8))) (let ((.def_5 (+ .def_4 .def_3 .def_2 .def_1 .def_0))) (let ((.def_6 (< .def_5 (/ 118948176421263 281474976710656)))) (let ((.def_7 (or A7 .def_6))) (let ((.def_8 (* (/ 4387104910108999 4503599627370496) x5))) (let ((.def_9 (* (/ 4104584113894541 4503599627370496) x3))) (let ((.def_10 (* (- (/ 2530047292664529 4503599627370496)) x6))) (let ((.def_11 (* (/ 2162394197965717 2251799813685248) x8))) (let ((.def_12 (* (/ 1427018941004711 4503599627370496) x9))) (let ((.def_13 (* (/ 3799493188880559 4503599627370496) x4))) (let ((.def_14 (* (- (/ 497161286498819 1125899906842624)) x7))) (let ((.def_15 (* (/ 415055703707439 1125899906842624) x2))) (let ((.def_16 (+ .def_15 .def_14 .def_13 .def_12 .def_11 .def_10 .def_9 .def_8))) (let ((.def_17 (< .def_16 (- (/ 2116341782290595 562949953421312))))) (let ((.def_18 (not .def_17))) (let ((.def_19 (or A5 .def_18))) (let ((.def_20 (not .def_19))) (let ((.def_21 (= .def_20 .def_7))) (let ((.def_22 (not A2))) (let ((.def_23 (not A5))) (let ((.def_24 (or .def_23 .def_22))) (let ((.def_25 (not .def_24))) (let ((.def_26 (or .def_23 A8))) (let ((.def_27 (and .def_26 .def_25))) (let ((.def_28 (not .def_27))) (let ((.def_29 (or .def_28 .def_21))) (let ((.def_30 (not .def_29))) (let ((.def_31 (not A3))) (let ((.def_32 (or A3 .def_31))) (let ((.def_33 (not .def_32))) (let ((.def_34 (* (- (/ 229108574363249 1125899906842624)) x0))) (let ((.def_35 (* (- (/ 366175489597911 562949953421312)) x4))) (let ((.def_36 (* (/ 725023490199539 1125899906842624) x7))) (let ((.def_37 (* (- (/ 374796867760857 4503599627370496)) x6))) (let ((.def_38 (+ .def_37 .def_36 .def_35 .def_34))) (let ((.def_39 (< .def_38 (/ 3122317077548741 1125899906842624)))) (let ((.def_40 (* (- (/ 461401975117637 2251799813685248)) x8))) (let ((.def_41 (* (- (/ 1264210566998105 2251799813685248)) x9))) (let ((.def_42 (* (/ 1020880619883673 2251799813685248) x3))) (let ((.def_43 (* (- (/ 1006932042461649 1125899906842624)) x5))) (let ((.def_44 (* (- (/ 714712846994395 2251799813685248)) x6))) (let ((.def_45 (* (/ 2132282142893411 2251799813685248) x0))) (let ((.def_46 (* (- (/ 2042279141018769 2251799813685248)) x2))) (let ((.def_47 (* (/ 2509379676895899 4503599627370496) x4))) (let ((.def_48 (+ .def_47 .def_46 .def_45 .def_44 .def_43 .def_42 .def_41 .def_40))) (let ((.def_49 (< .def_48 (/ 6186405164531 562949953421312)))) (let ((.def_50 (not .def_49))) (let ((.def_51 (and .def_50 .def_39))) (let ((.def_52 (or .def_51 .def_33))) (let ((.def_53 (* (- (/ 858756915424529 4503599627370496)) x4))) (let ((.def_54 (< .def_53 (- (/ 1104025624201937 1125899906842624))))) (let ((.def_55 (and .def_54 A9))) (let ((.def_56 (not A8))) (let ((.def_57 (or .def_56 A9))) (let ((.def_58 (= .def_57 .def_55))) (let ((.def_59 (not .def_58))) (let ((.def_60 (and .def_59 .def_52))) (let ((.def_61 (or .def_60 .def_30))) (let ((.def_62 (<= x9 1.0))) (let ((.def_63 (<= 0.0 x9))) (let ((.def_64 (<= x8 1.0))) (let ((.def_65 (<= 0.0 x8))) (let ((.def_66 (<= x7 1.0))) (let ((.def_67 (<= 0.0 x7))) (let ((.def_68 (<= x6 1.0))) (let ((.def_69 (<= 0.0 x6))) (let ((.def_70 (<= x5 1.0))) (let ((.def_71 (<= 0.0 x5))) (let ((.def_72 (<= x4 1.0))) (let ((.def_73 (<= 0.0 x4))) (let ((.def_74 (<= x3 1.0))) (let ((.def_75 (<= 0.0 x3))) (let ((.def_76 (<= x2 1.0))) (let ((.def_77 (<= 0.0 x2))) (let ((.def_78 (<= x1 1.0))) (let ((.def_79 (<= 0.0 x1))) (let ((.def_80 (<= x0 1.0))) (let ((.def_81 (<= 0.0 x0))) (let ((.def_82 (and .def_81 .def_80 .def_79 .def_78 .def_77 .def_76 .def_75 .def_74 .def_73 .def_72 .def_71 .def_70 .def_69 .def_68 .def_67 .def_66 .def_65 .def_64 .def_63 .def_62 .def_61))) .def_82))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
