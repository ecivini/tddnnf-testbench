(set-logic QF_LRA)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun A1 () Bool)
(declare-fun A6 () Bool)
(declare-fun A7 () Bool)
(declare-fun A8 () Bool)
(declare-fun A9 () Bool)
(assert (let ((.def_0 (* (/ 3035003436605395 4503599627370496) x3))) (let ((.def_1 (* (/ 238092299147251 562949953421312) x5))) (let ((.def_2 (* (- (/ 105980396368923 4503599627370496)) x4))) (let ((.def_3 (* (- (/ 532922043428419 1125899906842624)) x0))) (let ((.def_4 (* (/ 281619617140315 4503599627370496) x8))) (let ((.def_5 (+ .def_4 .def_3 .def_2 .def_1 .def_0))) (let ((.def_6 (< .def_5 (- (/ 1320329074856707 281474976710656))))) (let ((.def_7 (not .def_6))) (let ((.def_8 (or A1 .def_7))) (let ((.def_9 (* (- (/ 1214874193192561 4503599627370496)) x8))) (let ((.def_10 (* (/ 41048833158975 140737488355328) x0))) (let ((.def_11 (* (/ 271580466825749 4503599627370496) x7))) (let ((.def_12 (+ .def_11 .def_10 .def_9))) (let ((.def_13 (< .def_12 (- (/ 8124248109046581 4503599627370496))))) (let ((.def_14 (not .def_13))) (let ((.def_15 (and .def_14 A8))) (let ((.def_16 (not .def_15))) (let ((.def_17 (or .def_16 .def_8))) (let ((.def_18 (* (/ 2446026815496511 4503599627370496) x8))) (let ((.def_19 (* (/ 167098914013393 2251799813685248) x4))) (let ((.def_20 (* (/ 906988208837525 1125899906842624) x9))) (let ((.def_21 (+ .def_20 .def_19 .def_18))) (let ((.def_22 (< .def_21 (/ 670718284121187 1125899906842624)))) (let ((.def_23 (not .def_22))) (let ((.def_24 (* (/ 1444825006471363 2251799813685248) x4))) (let ((.def_25 (* (- (/ 2691537557621183 4503599627370496)) x6))) (let ((.def_26 (* (- (/ 2182836979462591 2251799813685248)) x8))) (let ((.def_27 (* (- (/ 2032469394749041 4503599627370496)) x1))) (let ((.def_28 (* (/ 146289217446637 2251799813685248) x0))) (let ((.def_29 (* (- (/ 245748810456997 281474976710656)) x2))) (let ((.def_30 (+ .def_29 .def_28 .def_27 .def_26 .def_25 .def_24))) (let ((.def_31 (< .def_30 (- (/ 1164170483669905 281474976710656))))) (let ((.def_32 (and .def_31 .def_23))) (let ((.def_33 (not A6))) (let ((.def_34 (not A1))) (let ((.def_35 (and .def_34 .def_33))) (let ((.def_36 (or .def_35 .def_32))) (let ((.def_37 (or .def_36 .def_17))) (let ((.def_38 (not A9))) (let ((.def_39 (not A7))) (let ((.def_40 (and .def_39 .def_38))) (let ((.def_41 (* (/ 3856994628299447 4503599627370496) x8))) (let ((.def_42 (* (- (/ 2227385727847881 2251799813685248)) x3))) (let ((.def_43 (* (/ 895085235794741 2251799813685248) x2))) (let ((.def_44 (* (- (/ 616455630622467 2251799813685248)) x4))) (let ((.def_45 (* (/ 785512779971415 4503599627370496) x7))) (let ((.def_46 (* (- (/ 2366220027183407 4503599627370496)) x9))) (let ((.def_47 (* (- (/ 264433279155021 281474976710656)) x5))) (let ((.def_48 (* (/ 1862898775189421 2251799813685248) x1))) (let ((.def_49 (+ .def_48 .def_47 .def_46 .def_45 .def_44 .def_43 .def_42 .def_41))) (let ((.def_50 (< .def_49 (/ 1779644518747731 281474976710656)))) (let ((.def_51 (* (/ 3998559389319721 4503599627370496) x2))) (let ((.def_52 (* (/ 616412421208021 1125899906842624) x3))) (let ((.def_53 (+ .def_52 .def_51))) (let ((.def_54 (< .def_53 (/ 4175328032646943 2251799813685248)))) (let ((.def_55 (or .def_54 .def_50))) (let ((.def_56 (not .def_55))) (let ((.def_57 (or .def_56 .def_40))) (let ((.def_58 (* (/ 859019989464869 4503599627370496) x7))) (let ((.def_59 (* (/ 1030208703614403 4503599627370496) x2))) (let ((.def_60 (* (- (/ 874871168646799 2251799813685248)) x1))) (let ((.def_61 (* (- (/ 1463260647648791 2251799813685248)) x5))) (let ((.def_62 (* (- (/ 2238880523335393 4503599627370496)) x4))) (let ((.def_63 (* (- (/ 4462483282804847 4503599627370496)) x6))) (let ((.def_64 (* (/ 2242075563141671 4503599627370496) x3))) (let ((.def_65 (* (- (/ 865603583110437 4503599627370496)) x9))) (let ((.def_66 (* (/ 724257275079373 4503599627370496) x0))) (let ((.def_67 (* (- (/ 969200555388375 4503599627370496)) x8))) (let ((.def_68 (+ .def_67 .def_66 .def_65 .def_64 .def_63 .def_62 .def_61 .def_60 .def_59 .def_58))) (let ((.def_69 (< .def_68 (/ 2143701612315487 281474976710656)))) (let ((.def_70 (* (/ 1612740718336041 2251799813685248) x2))) (let ((.def_71 (* (/ 4169386349984287 4503599627370496) x3))) (let ((.def_72 (* (/ 2824410468563935 4503599627370496) x8))) (let ((.def_73 (* (/ 1009059893934617 1125899906842624) x9))) (let ((.def_74 (* (- (/ 45865908714111 70368744177664)) x5))) (let ((.def_75 (* (- (/ 4381014443652413 4503599627370496)) x0))) (let ((.def_76 (* (/ 889027531003937 2251799813685248) x7))) (let ((.def_77 (* (/ 1803920429229339 2251799813685248) x1))) (let ((.def_78 (+ .def_77 .def_76 .def_75 .def_74 .def_73 .def_72 .def_71 .def_70))) (let ((.def_79 (< .def_78 (/ 1005160251274737 140737488355328)))) (let ((.def_80 (and .def_79 .def_69))) (let ((.def_81 (not .def_80))) (let ((.def_82 (and A9 A1))) (let ((.def_83 (or .def_82 .def_81))) (let ((.def_84 (not .def_83))) (let ((.def_85 (or .def_84 .def_57))) (let ((.def_86 (not .def_85))) (let ((.def_87 (and .def_86 .def_37))) (let ((.def_88 (not .def_87))) (let ((.def_89 (<= x9 1.0))) (let ((.def_90 (<= 0.0 x9))) (let ((.def_91 (<= x8 1.0))) (let ((.def_92 (<= 0.0 x8))) (let ((.def_93 (<= x7 1.0))) (let ((.def_94 (<= 0.0 x7))) (let ((.def_95 (<= x6 1.0))) (let ((.def_96 (<= 0.0 x6))) (let ((.def_97 (<= x5 1.0))) (let ((.def_98 (<= 0.0 x5))) (let ((.def_99 (<= x4 1.0))) (let ((.def_100 (<= 0.0 x4))) (let ((.def_101 (<= x3 1.0))) (let ((.def_102 (<= 0.0 x3))) (let ((.def_103 (<= x2 1.0))) (let ((.def_104 (<= 0.0 x2))) (let ((.def_105 (<= x1 1.0))) (let ((.def_106 (<= 0.0 x1))) (let ((.def_107 (<= x0 1.0))) (let ((.def_108 (<= 0.0 x0))) (let ((.def_109 (and .def_108 .def_107 .def_106 .def_105 .def_104 .def_103 .def_102 .def_101 .def_100 .def_99 .def_98 .def_97 .def_96 .def_95 .def_94 .def_93 .def_92 .def_91 .def_90 .def_89 .def_88))) .def_109)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
