(set-logic QF_LRA)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun A0 () Bool)
(declare-fun A1 () Bool)
(declare-fun A5 () Bool)
(declare-fun A6 () Bool)
(declare-fun A8 () Bool)
(declare-fun A9 () Bool)
(assert (let ((.def_0 (* (- (/ 2207257840841365 2251799813685248)) x8))) (let ((.def_1 (* (- (/ 2010631032968867 4503599627370496)) x9))) (let ((.def_2 (* (/ 1323643216991621 4503599627370496) x0))) (let ((.def_3 (* (- (/ 86281660565195 281474976710656)) x4))) (let ((.def_4 (* (/ 33076132063639 1125899906842624) x6))) (let ((.def_5 (* (/ 2069281278590885 4503599627370496) x3))) (let ((.def_6 (* (- (/ 210268159431267 562949953421312)) x2))) (let ((.def_7 (* (/ 971278302231491 2251799813685248) x1))) (let ((.def_8 (+ .def_7 .def_6 .def_5 .def_4 .def_3 .def_2 .def_1 .def_0))) (let ((.def_9 (< .def_8 (/ 551617236389147 562949953421312)))) (let ((.def_10 (* (- (/ 454638259022331 1125899906842624)) x3))) (let ((.def_11 (* (/ 2089310373477765 4503599627370496) x4))) (let ((.def_12 (+ .def_11 .def_10))) (let ((.def_13 (< .def_12 (/ 2611247181478581 2251799813685248)))) (let ((.def_14 (not .def_13))) (let ((.def_15 (= .def_14 .def_9))) (let ((.def_16 (not .def_15))) (let ((.def_17 (* (- (/ 2476964941687087 4503599627370496)) x4))) (let ((.def_18 (* (- (/ 4451084412099311 4503599627370496)) x1))) (let ((.def_19 (* (- (/ 440734836157589 2251799813685248)) x8))) (let ((.def_20 (* (- (/ 7354342820397 4503599627370496)) x5))) (let ((.def_21 (+ .def_20 .def_19 .def_18 .def_17))) (let ((.def_22 (< .def_21 (/ 2754898429987433 1125899906842624)))) (let ((.def_23 (or A1 .def_22))) (let ((.def_24 (not .def_23))) (let ((.def_25 (or .def_24 .def_16))) (let ((.def_26 (not .def_25))) (let ((.def_27 (not A8))) (let ((.def_28 (not A0))) (let ((.def_29 (and .def_28 .def_27))) (let ((.def_30 (not .def_29))) (let ((.def_31 (* (- (/ 1119076684262401 4503599627370496)) x4))) (let ((.def_32 (< .def_31 (- (/ 495521630507129 1125899906842624))))) (let ((.def_33 (and .def_32 A6))) (let ((.def_34 (not .def_33))) (let ((.def_35 (and .def_34 .def_30))) (let ((.def_36 (and .def_35 .def_26))) (let ((.def_37 (not .def_36))) (let ((.def_38 (* (/ 1868211354644239 4503599627370496) x9))) (let ((.def_39 (* (/ 1246811015552667 4503599627370496) x3))) (let ((.def_40 (+ .def_39 .def_38))) (let ((.def_41 (< .def_40 (- (/ 2003160210721733 2251799813685248))))) (let ((.def_42 (not .def_41))) (let ((.def_43 (or .def_42 A9))) (let ((.def_44 (and .def_28 A1))) (let ((.def_45 (not .def_44))) (let ((.def_46 (= .def_45 .def_43))) (let ((.def_47 (* (- (/ 589254558055655 4503599627370496)) x0))) (let ((.def_48 (* (/ 709681125767901 2251799813685248) x1))) (let ((.def_49 (* (- (/ 570798469410173 2251799813685248)) x2))) (let ((.def_50 (* (- (/ 424354601090151 4503599627370496)) x8))) (let ((.def_51 (* (- (/ 472240623876425 2251799813685248)) x3))) (let ((.def_52 (* (/ 1047491296194939 2251799813685248) x4))) (let ((.def_53 (+ .def_52 .def_51 .def_50 .def_49 .def_48 .def_47))) (let ((.def_54 (< .def_53 (- (/ 5273951273260539 1125899906842624))))) (let ((.def_55 (not A5))) (let ((.def_56 (or .def_55 .def_54))) (let ((.def_57 (* (- (/ 731345271748869 2251799813685248)) x1))) (let ((.def_58 (* (- (/ 2604723412739369 4503599627370496)) x4))) (let ((.def_59 (* (/ 1132946727968499 4503599627370496) x6))) (let ((.def_60 (* (/ 2184574502004631 2251799813685248) x0))) (let ((.def_61 (* (/ 1332925401207189 4503599627370496) x9))) (let ((.def_62 (* (/ 2247421084802617 4503599627370496) x2))) (let ((.def_63 (* (- (/ 559381558075167 4503599627370496)) x7))) (let ((.def_64 (+ .def_63 .def_62 .def_61 .def_60 .def_59 .def_58 .def_57))) (let ((.def_65 (< .def_64 (/ 560917941216287 281474976710656)))) (let ((.def_66 (* (/ 389690806707777 2251799813685248) x2))) (let ((.def_67 (< .def_66 (- (/ 121618489030985 4503599627370496))))) (let ((.def_68 (not .def_67))) (let ((.def_69 (or .def_68 .def_65))) (let ((.def_70 (not .def_69))) (let ((.def_71 (= .def_70 .def_56))) (let ((.def_72 (not .def_71))) (let ((.def_73 (or .def_72 .def_46))) (let ((.def_74 (not .def_73))) (let ((.def_75 (or .def_74 .def_37))) (let ((.def_76 (not .def_75))) (let ((.def_77 (<= x9 1.0))) (let ((.def_78 (<= 0.0 x9))) (let ((.def_79 (<= x8 1.0))) (let ((.def_80 (<= 0.0 x8))) (let ((.def_81 (<= x7 1.0))) (let ((.def_82 (<= 0.0 x7))) (let ((.def_83 (<= x6 1.0))) (let ((.def_84 (<= 0.0 x6))) (let ((.def_85 (<= x5 1.0))) (let ((.def_86 (<= 0.0 x5))) (let ((.def_87 (<= x4 1.0))) (let ((.def_88 (<= 0.0 x4))) (let ((.def_89 (<= x3 1.0))) (let ((.def_90 (<= 0.0 x3))) (let ((.def_91 (<= x2 1.0))) (let ((.def_92 (<= 0.0 x2))) (let ((.def_93 (<= x1 1.0))) (let ((.def_94 (<= 0.0 x1))) (let ((.def_95 (<= x0 1.0))) (let ((.def_96 (<= 0.0 x0))) (let ((.def_97 (and .def_96 .def_95 .def_94 .def_93 .def_92 .def_91 .def_90 .def_89 .def_88 .def_87 .def_86 .def_85 .def_84 .def_83 .def_82 .def_81 .def_80 .def_79 .def_78 .def_77 .def_76))) .def_97)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
