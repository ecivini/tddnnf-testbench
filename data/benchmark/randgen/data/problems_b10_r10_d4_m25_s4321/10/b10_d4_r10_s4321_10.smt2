(set-logic QF_LRA)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun A0 () Bool)
(declare-fun A2 () Bool)
(declare-fun A3 () Bool)
(declare-fun A6 () Bool)
(declare-fun A8 () Bool)
(declare-fun A9 () Bool)
(assert (let ((.def_0 (and A8 A3))) (let ((.def_1 (not .def_0))) (let ((.def_2 (and A2 A8))) (let ((.def_3 (or .def_2 .def_1))) (let ((.def_4 (* (/ 491004745994417 562949953421312) x1))) (let ((.def_5 (* (- (/ 1842278944663081 4503599627370496)) x5))) (let ((.def_6 (* (- (/ 906682982168103 4503599627370496)) x0))) (let ((.def_7 (+ .def_6 .def_5 .def_4))) (let ((.def_8 (< .def_7 (/ 1349810248844405 562949953421312)))) (let ((.def_9 (not .def_8))) (let ((.def_10 (or A9 .def_9))) (let ((.def_11 (not .def_10))) (let ((.def_12 (* (- (/ 3514852307950747 4503599627370496)) x2))) (let ((.def_13 (< .def_12 (- (/ 1819790356811489 4503599627370496))))) (let ((.def_14 (not A0))) (let ((.def_15 (or .def_14 .def_13))) (let ((.def_16 (and .def_15 .def_11))) (let ((.def_17 (not .def_16))) (let ((.def_18 (= .def_17 .def_3))) (let ((.def_19 (not A8))) (let ((.def_20 (* (- (/ 228446283922329 4503599627370496)) x3))) (let ((.def_21 (* (- (/ 33954744739683 281474976710656)) x8))) (let ((.def_22 (* (/ 1622080939750425 4503599627370496) x4))) (let ((.def_23 (* (/ 4384711829895099 4503599627370496) x1))) (let ((.def_24 (* (/ 845459409316161 2251799813685248) x9))) (let ((.def_25 (* (/ 9060209388337 1125899906842624) x6))) (let ((.def_26 (* (- (/ 2079696462907505 4503599627370496)) x5))) (let ((.def_27 (* (/ 931785340946059 1125899906842624) x0))) (let ((.def_28 (* (/ 2982568842196723 4503599627370496) x2))) (let ((.def_29 (+ .def_28 .def_27 .def_26 .def_25 .def_24 .def_23 .def_22 .def_21 .def_20))) (let ((.def_30 (< .def_29 (/ 2459048567070743 281474976710656)))) (let ((.def_31 (not .def_30))) (let ((.def_32 (= .def_31 .def_19))) (let ((.def_33 (not .def_32))) (let ((.def_34 (* (- (/ 338457618315677 1125899906842624)) x4))) (let ((.def_35 (* (/ 2572527458422561 4503599627370496) x7))) (let ((.def_36 (* (- (/ 173164965078385 4503599627370496)) x9))) (let ((.def_37 (* (- (/ 333953182456315 4503599627370496)) x8))) (let ((.def_38 (+ .def_37 .def_36 .def_35 .def_34))) (let ((.def_39 (< .def_38 (/ 790842478085705 281474976710656)))) (let ((.def_40 (not .def_39))) (let ((.def_41 (not A6))) (let ((.def_42 (and .def_41 .def_40))) (let ((.def_43 (and .def_42 .def_33))) (let ((.def_44 (* (/ 2760568723406083 4503599627370496) x2))) (let ((.def_45 (* (- (/ 4194348869771497 4503599627370496)) x5))) (let ((.def_46 (* (- (/ 585952048589601 1125899906842624)) x8))) (let ((.def_47 (* (- (/ 957019923768005 2251799813685248)) x7))) (let ((.def_48 (* (/ 1937605527785767 4503599627370496) x0))) (let ((.def_49 (* (/ 3431239843697349 4503599627370496) x9))) (let ((.def_50 (* (/ 190286366314999 2251799813685248) x6))) (let ((.def_51 (* (- (/ 2048856647556327 2251799813685248)) x1))) (let ((.def_52 (* (- (/ 1285342714338589 2251799813685248)) x3))) (let ((.def_53 (* (- (/ 585008872443117 2251799813685248)) x4))) (let ((.def_54 (+ .def_53 .def_52 .def_51 .def_50 .def_49 .def_48 .def_47 .def_46 .def_45 .def_44))) (let ((.def_55 (< .def_54 (- (/ 3397979976161871 562949953421312))))) (let ((.def_56 (not A3))) (let ((.def_57 (or .def_56 .def_55))) (let ((.def_58 (not A2))) (let ((.def_59 (or A0 .def_58))) (let ((.def_60 (not .def_59))) (let ((.def_61 (or .def_60 .def_57))) (let ((.def_62 (or .def_61 .def_43))) (let ((.def_63 (not .def_62))) (let ((.def_64 (and .def_63 .def_18))) (let ((.def_65 (not .def_64))) (let ((.def_66 (<= x9 1.0))) (let ((.def_67 (<= 0.0 x9))) (let ((.def_68 (<= x8 1.0))) (let ((.def_69 (<= 0.0 x8))) (let ((.def_70 (<= x7 1.0))) (let ((.def_71 (<= 0.0 x7))) (let ((.def_72 (<= x6 1.0))) (let ((.def_73 (<= 0.0 x6))) (let ((.def_74 (<= x5 1.0))) (let ((.def_75 (<= 0.0 x5))) (let ((.def_76 (<= x4 1.0))) (let ((.def_77 (<= 0.0 x4))) (let ((.def_78 (<= x3 1.0))) (let ((.def_79 (<= 0.0 x3))) (let ((.def_80 (<= x2 1.0))) (let ((.def_81 (<= 0.0 x2))) (let ((.def_82 (<= x1 1.0))) (let ((.def_83 (<= 0.0 x1))) (let ((.def_84 (<= x0 1.0))) (let ((.def_85 (<= 0.0 x0))) (let ((.def_86 (and .def_85 .def_84 .def_83 .def_82 .def_81 .def_80 .def_79 .def_78 .def_77 .def_76 .def_75 .def_74 .def_73 .def_72 .def_71 .def_70 .def_69 .def_68 .def_67 .def_66 .def_65))) .def_86))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
