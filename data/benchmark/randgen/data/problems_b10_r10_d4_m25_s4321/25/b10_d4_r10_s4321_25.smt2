(set-logic QF_LRA)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun A1 () Bool)
(declare-fun A2 () Bool)
(declare-fun A3 () Bool)
(declare-fun A5 () Bool)
(declare-fun A6 () Bool)
(declare-fun A8 () Bool)
(assert (let ((.def_0 (* (- (/ 807856915624283 1125899906842624)) x3))) (let ((.def_1 (* (/ 2486435256623293 4503599627370496) x7))) (let ((.def_2 (+ .def_1 .def_0))) (let ((.def_3 (< .def_2 (- (/ 3807487070090749 2251799813685248))))) (let ((.def_4 (not .def_3))) (let ((.def_5 (or .def_4 A8))) (let ((.def_6 (not A3))) (let ((.def_7 (* (/ 2981200404456243 4503599627370496) x0))) (let ((.def_8 (* (- (/ 67241148371241 1125899906842624)) x3))) (let ((.def_9 (* (/ 2857042337551845 4503599627370496) x7))) (let ((.def_10 (* (/ 3564769234694995 4503599627370496) x4))) (let ((.def_11 (* (/ 259244293896227 4503599627370496) x2))) (let ((.def_12 (* (- (/ 407019263942527 1125899906842624)) x5))) (let ((.def_13 (* (/ 46328147627293 2251799813685248) x9))) (let ((.def_14 (* (- (/ 668812178551749 2251799813685248)) x1))) (let ((.def_15 (* (/ 2791147621163801 4503599627370496) x6))) (let ((.def_16 (* (- (/ 2790730990313179 4503599627370496)) x8))) (let ((.def_17 (+ .def_16 .def_15 .def_14 .def_13 .def_12 .def_11 .def_10 .def_9 .def_8 .def_7))) (let ((.def_18 (< .def_17 (/ 1332591562845475 140737488355328)))) (let ((.def_19 (not .def_18))) (let ((.def_20 (and .def_19 .def_6))) (let ((.def_21 (not .def_20))) (let ((.def_22 (or .def_21 .def_5))) (let ((.def_23 (not .def_22))) (let ((.def_24 (* (/ 665930550377255 4503599627370496) x0))) (let ((.def_25 (< .def_24 (/ 1920830706629931 4503599627370496)))) (let ((.def_26 (or A5 .def_25))) (let ((.def_27 (not .def_26))) (let ((.def_28 (or A3 A6))) (let ((.def_29 (= .def_28 .def_27))) (let ((.def_30 (not .def_29))) (let ((.def_31 (or .def_30 .def_23))) (let ((.def_32 (not .def_31))) (let ((.def_33 (not A6))) (let ((.def_34 (and .def_33 A2))) (let ((.def_35 (not .def_34))) (let ((.def_36 (not A2))) (let ((.def_37 (* (- (/ 883438293436749 2251799813685248)) x0))) (let ((.def_38 (* (- (/ 135055872587911 2251799813685248)) x1))) (let ((.def_39 (+ .def_38 .def_37))) (let ((.def_40 (< .def_39 (/ 1056548701190731 562949953421312)))) (let ((.def_41 (or .def_40 .def_36))) (let ((.def_42 (not .def_41))) (let ((.def_43 (and .def_42 .def_35))) (let ((.def_44 (* (/ 432904796839351 562949953421312) x3))) (let ((.def_45 (* (- (/ 370929363767803 562949953421312)) x7))) (let ((.def_46 (* (- (/ 1253860811303111 2251799813685248)) x5))) (let ((.def_47 (* (- (/ 190995193668757 281474976710656)) x2))) (let ((.def_48 (* (- (/ 1920047684068763 4503599627370496)) x9))) (let ((.def_49 (* (/ 3030948950454993 4503599627370496) x1))) (let ((.def_50 (+ .def_49 .def_48 .def_47 .def_46 .def_45 .def_44))) (let ((.def_51 (< .def_50 (- (/ 7539565170329277 2251799813685248))))) (let ((.def_52 (not .def_51))) (let ((.def_53 (not A1))) (let ((.def_54 (or .def_53 .def_52))) (let ((.def_55 (* (/ 536153670689139 562949953421312) x1))) (let ((.def_56 (* (/ 517507484827951 4503599627370496) x9))) (let ((.def_57 (* (/ 317003863717903 1125899906842624) x3))) (let ((.def_58 (* (- (/ 809170043031345 1125899906842624)) x0))) (let ((.def_59 (+ .def_58 .def_57 .def_56 .def_55))) (let ((.def_60 (< .def_59 (- (/ 316894905799745 562949953421312))))) (let ((.def_61 (and .def_6 .def_60))) (let ((.def_62 (= .def_61 .def_54))) (let ((.def_63 (and .def_62 .def_43))) (let ((.def_64 (or .def_63 .def_32))) (let ((.def_65 (<= x9 1.0))) (let ((.def_66 (<= 0.0 x9))) (let ((.def_67 (<= x8 1.0))) (let ((.def_68 (<= 0.0 x8))) (let ((.def_69 (<= x7 1.0))) (let ((.def_70 (<= 0.0 x7))) (let ((.def_71 (<= x6 1.0))) (let ((.def_72 (<= 0.0 x6))) (let ((.def_73 (<= x5 1.0))) (let ((.def_74 (<= 0.0 x5))) (let ((.def_75 (<= x4 1.0))) (let ((.def_76 (<= 0.0 x4))) (let ((.def_77 (<= x3 1.0))) (let ((.def_78 (<= 0.0 x3))) (let ((.def_79 (<= x2 1.0))) (let ((.def_80 (<= 0.0 x2))) (let ((.def_81 (<= x1 1.0))) (let ((.def_82 (<= 0.0 x1))) (let ((.def_83 (<= x0 1.0))) (let ((.def_84 (<= 0.0 x0))) (let ((.def_85 (and .def_84 .def_83 .def_82 .def_81 .def_80 .def_79 .def_78 .def_77 .def_76 .def_75 .def_74 .def_73 .def_72 .def_71 .def_70 .def_69 .def_68 .def_67 .def_66 .def_65 .def_64))) .def_85)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
