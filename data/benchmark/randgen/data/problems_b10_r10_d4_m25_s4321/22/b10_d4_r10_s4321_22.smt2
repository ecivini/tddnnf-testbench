(set-logic QF_LRA)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun A0 () Bool)
(declare-fun A2 () Bool)
(declare-fun A3 () Bool)
(declare-fun A5 () Bool)
(declare-fun A6 () Bool)
(declare-fun A8 () Bool)
(declare-fun A9 () Bool)
(assert (let ((.def_0 (not A8))) (let ((.def_1 (or .def_0 A9))) (let ((.def_2 (not A6))) (let ((.def_3 (* (- (/ 2085481744391051 2251799813685248)) x7))) (let ((.def_4 (* (/ 1875933729878499 2251799813685248) x8))) (let ((.def_5 (* (- (/ 2953275456886605 4503599627370496)) x6))) (let ((.def_6 (* (- (/ 3908659290759301 4503599627370496)) x3))) (let ((.def_7 (* (/ 3098511985428089 4503599627370496) x5))) (let ((.def_8 (* (- (/ 84872031440711 2251799813685248)) x2))) (let ((.def_9 (+ .def_8 .def_7 .def_6 .def_5 .def_4 .def_3))) (let ((.def_10 (< .def_9 (/ 1219310165260483 281474976710656)))) (let ((.def_11 (not .def_10))) (let ((.def_12 (or .def_11 .def_2))) (let ((.def_13 (not .def_12))) (let ((.def_14 (and .def_13 .def_1))) (let ((.def_15 (not .def_14))) (let ((.def_16 (* (/ 432271817934529 1125899906842624) x6))) (let ((.def_17 (* (- (/ 679540610122801 1125899906842624)) x0))) (let ((.def_18 (+ .def_17 .def_16))) (let ((.def_19 (< .def_18 (- (/ 875560952698117 2251799813685248))))) (let ((.def_20 (or .def_19 A2))) (let ((.def_21 (not .def_20))) (let ((.def_22 (* (/ 590344528157085 2251799813685248) x9))) (let ((.def_23 (* (- (/ 2727383267035963 4503599627370496)) x7))) (let ((.def_24 (* (- (/ 286223888147619 1125899906842624)) x6))) (let ((.def_25 (+ .def_24 .def_23 .def_22))) (let ((.def_26 (< .def_25 (- (/ 580138601681049 281474976710656))))) (let ((.def_27 (not .def_26))) (let ((.def_28 (and A5 .def_27))) (let ((.def_29 (or .def_28 .def_21))) (let ((.def_30 (or .def_29 .def_15))) (let ((.def_31 (* (/ 554626975173529 1125899906842624) x7))) (let ((.def_32 (* (/ 1014385178931107 1125899906842624) x3))) (let ((.def_33 (* (- (/ 3288731634188345 4503599627370496)) x2))) (let ((.def_34 (* (/ 2542641879637049 4503599627370496) x9))) (let ((.def_35 (+ .def_34 .def_33 .def_32 .def_31))) (let ((.def_36 (< .def_35 (/ 3087794808580847 1125899906842624)))) (let ((.def_37 (not .def_36))) (let ((.def_38 (* (- (/ 4306305895834235 4503599627370496)) x2))) (let ((.def_39 (* (- (/ 855450362369915 1125899906842624)) x5))) (let ((.def_40 (* (- (/ 768349617291495 4503599627370496)) x0))) (let ((.def_41 (* (/ 368499029947205 2251799813685248) x9))) (let ((.def_42 (* (/ 75910361261535 140737488355328) x8))) (let ((.def_43 (+ .def_42 .def_41 .def_40 .def_39 .def_38))) (let ((.def_44 (< .def_43 (- (/ 3863933015457839 1125899906842624))))) (let ((.def_45 (or .def_44 .def_37))) (let ((.def_46 (* (/ 69789916106169 281474976710656) x5))) (let ((.def_47 (* (- (/ 2085637836006299 2251799813685248)) x0))) (let ((.def_48 (* (/ 123858882935783 281474976710656) x9))) (let ((.def_49 (+ .def_48 .def_47 .def_46))) (let ((.def_50 (< .def_49 (/ 658941617967399 1125899906842624)))) (let ((.def_51 (= .def_50 A2))) (let ((.def_52 (and .def_51 .def_45))) (let ((.def_53 (not A3))) (let ((.def_54 (* (/ 2202861742738833 2251799813685248) x2))) (let ((.def_55 (* (- (/ 1343847877884353 4503599627370496)) x4))) (let ((.def_56 (* (- (/ 4121168997660391 4503599627370496)) x7))) (let ((.def_57 (* (/ 503854495265955 1125899906842624) x5))) (let ((.def_58 (* (- (/ 4320261076122707 4503599627370496)) x9))) (let ((.def_59 (* (- (/ 2114897206153695 2251799813685248)) x8))) (let ((.def_60 (+ .def_59 .def_58 .def_57 .def_56 .def_55 .def_54))) (let ((.def_61 (< .def_60 (- (/ 4874886268520133 1125899906842624))))) (let ((.def_62 (or .def_61 .def_53))) (let ((.def_63 (not .def_62))) (let ((.def_64 (not A0))) (let ((.def_65 (* (- (/ 2499924970825947 4503599627370496)) x3))) (let ((.def_66 (* (/ 860527644937397 2251799813685248) x4))) (let ((.def_67 (* (/ 1053795663691059 1125899906842624) x6))) (let ((.def_68 (* (/ 1787410306250227 4503599627370496) x9))) (let ((.def_69 (* (/ 255488248605651 2251799813685248) x2))) (let ((.def_70 (* (- (/ 2014598177881787 2251799813685248)) x1))) (let ((.def_71 (* (- (/ 1738390559169837 2251799813685248)) x5))) (let ((.def_72 (* (- (/ 1102833254642507 2251799813685248)) x8))) (let ((.def_73 (+ .def_72 .def_71 .def_70 .def_69 .def_68 .def_67 .def_66 .def_65))) (let ((.def_74 (< .def_73 (/ 109671190199291 35184372088832)))) (let ((.def_75 (or .def_74 .def_64))) (let ((.def_76 (not .def_75))) (let ((.def_77 (and .def_76 .def_63))) (let ((.def_78 (not .def_77))) (let ((.def_79 (or .def_78 .def_52))) (let ((.def_80 (not .def_79))) (let ((.def_81 (or .def_80 .def_30))) (let ((.def_82 (<= x9 1.0))) (let ((.def_83 (<= 0.0 x9))) (let ((.def_84 (<= x8 1.0))) (let ((.def_85 (<= 0.0 x8))) (let ((.def_86 (<= x7 1.0))) (let ((.def_87 (<= 0.0 x7))) (let ((.def_88 (<= x6 1.0))) (let ((.def_89 (<= 0.0 x6))) (let ((.def_90 (<= x5 1.0))) (let ((.def_91 (<= 0.0 x5))) (let ((.def_92 (<= x4 1.0))) (let ((.def_93 (<= 0.0 x4))) (let ((.def_94 (<= x3 1.0))) (let ((.def_95 (<= 0.0 x3))) (let ((.def_96 (<= x2 1.0))) (let ((.def_97 (<= 0.0 x2))) (let ((.def_98 (<= x1 1.0))) (let ((.def_99 (<= 0.0 x1))) (let ((.def_100 (<= x0 1.0))) (let ((.def_101 (<= 0.0 x0))) (let ((.def_102 (and .def_101 .def_100 .def_99 .def_98 .def_97 .def_96 .def_95 .def_94 .def_93 .def_92 .def_91 .def_90 .def_89 .def_88 .def_87 .def_86 .def_85 .def_84 .def_83 .def_82 .def_81))) .def_102))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
