(set-logic QF_LRA)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x6 () Real)
(declare-fun x7 () Real)
(declare-fun x8 () Real)
(declare-fun x9 () Real)
(declare-fun A1 () Bool)
(declare-fun A2 () Bool)
(declare-fun A3 () Bool)
(declare-fun A4 () Bool)
(declare-fun A6 () Bool)
(assert (let ((.def_0 (* (- (/ 2192639013500919 2251799813685248)) x2))) (let ((.def_1 (* (- (/ 1862946079061011 4503599627370496)) x8))) (let ((.def_2 (* (- (/ 2408266313038601 4503599627370496)) x4))) (let ((.def_3 (* (- (/ 786941214076237 1125899906842624)) x3))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (< .def_4 (/ 64244515345787 562949953421312)))) (let ((.def_6 (or .def_5 A3))) (let ((.def_7 (* (/ 3121297845006513 4503599627370496) x2))) (let ((.def_8 (< .def_7 (- (/ 1505417453318281 4503599627370496))))) (let ((.def_9 (or A6 .def_8))) (let ((.def_10 (or .def_9 .def_6))) (let ((.def_11 (not .def_10))) (let ((.def_12 (* (- (/ 1204673954789817 2251799813685248)) x6))) (let ((.def_13 (* (/ 1356279208486119 4503599627370496) x7))) (let ((.def_14 (* (/ 459709983535145 4503599627370496) x9))) (let ((.def_15 (* (/ 547924711340897 1125899906842624) x1))) (let ((.def_16 (* (- (/ 345123620435125 4503599627370496)) x3))) (let ((.def_17 (* (/ 112423370828249 140737488355328) x0))) (let ((.def_18 (* (- (/ 967404473123039 4503599627370496)) x5))) (let ((.def_19 (* (/ 743262277623651 1125899906842624) x2))) (let ((.def_20 (+ .def_19 .def_18 .def_17 .def_16 .def_15 .def_14 .def_13 .def_12))) (let ((.def_21 (< .def_20 (- (/ 4204990027325601 562949953421312))))) (let ((.def_22 (not A4))) (let ((.def_23 (or .def_22 .def_21))) (let ((.def_24 (not A1))) (let ((.def_25 (* (- (/ 4040395185817911 4503599627370496)) x3))) (let ((.def_26 (* (- (/ 2541440178383493 4503599627370496)) x6))) (let ((.def_27 (* (/ 1476388346685843 2251799813685248) x4))) (let ((.def_28 (* (- (/ 4312021419530299 4503599627370496)) x2))) (let ((.def_29 (* (/ 135756457949733 562949953421312) x8))) (let ((.def_30 (* (- (/ 820058601782553 1125899906842624)) x7))) (let ((.def_31 (* (/ 3131280238084039 4503599627370496) x1))) (let ((.def_32 (* (- (/ 461039165465225 2251799813685248)) x0))) (let ((.def_33 (* (- (/ 1800852042598045 2251799813685248)) x9))) (let ((.def_34 (+ .def_33 .def_32 .def_31 .def_30 .def_29 .def_28 .def_27 .def_26 .def_25))) (let ((.def_35 (< .def_34 (- (/ 6214286772558567 1125899906842624))))) (let ((.def_36 (or .def_35 .def_24))) (let ((.def_37 (not .def_36))) (let ((.def_38 (or .def_37 .def_23))) (let ((.def_39 (= .def_38 .def_11))) (let ((.def_40 (not .def_39))) (let ((.def_41 (* (/ 758883883248875 1125899906842624) x4))) (let ((.def_42 (< .def_41 (/ 3011977123591867 4503599627370496)))) (let ((.def_43 (not .def_42))) (let ((.def_44 (or .def_43 .def_22))) (let ((.def_45 (* (/ 2114595525866565 2251799813685248) x1))) (let ((.def_46 (* (- (/ 1758630450430111 2251799813685248)) x5))) (let ((.def_47 (* (- (/ 1771370883530147 4503599627370496)) x6))) (let ((.def_48 (* (- (/ 86561188528381 281474976710656)) x8))) (let ((.def_49 (* (/ 3319097967396667 4503599627370496) x3))) (let ((.def_50 (* (- (/ 62033411224467 140737488355328)) x0))) (let ((.def_51 (* (/ 1990676458425697 4503599627370496) x7))) (let ((.def_52 (* (- (/ 2884916756536095 4503599627370496)) x2))) (let ((.def_53 (* (- (/ 4254666871812355 4503599627370496)) x4))) (let ((.def_54 (* (/ 882694825652513 2251799813685248) x9))) (let ((.def_55 (+ .def_54 .def_53 .def_52 .def_51 .def_50 .def_49 .def_48 .def_47 .def_46 .def_45))) (let ((.def_56 (< .def_55 (/ 2632373189422491 281474976710656)))) (let ((.def_57 (* (- (/ 1134169443461831 4503599627370496)) x3))) (let ((.def_58 (* (/ 227949411945163 281474976710656) x9))) (let ((.def_59 (* (/ 2506032168033041 4503599627370496) x2))) (let ((.def_60 (* (- (/ 3232516172749553 4503599627370496)) x8))) (let ((.def_61 (* (- (/ 1637252442526435 2251799813685248)) x1))) (let ((.def_62 (* (/ 1743095332364433 2251799813685248) x4))) (let ((.def_63 (* (/ 3493614769880547 4503599627370496) x7))) (let ((.def_64 (* (- (/ 673674392589231 2251799813685248)) x0))) (let ((.def_65 (* (- (/ 953887638342799 2251799813685248)) x5))) (let ((.def_66 (+ .def_65 .def_64 .def_63 .def_62 .def_61 .def_60 .def_59 .def_58 .def_57))) (let ((.def_67 (< .def_66 (- (/ 3213577360236789 562949953421312))))) (let ((.def_68 (not .def_67))) (let ((.def_69 (and .def_68 .def_56))) (let ((.def_70 (or .def_69 .def_44))) (let ((.def_71 (and A2 A4))) (let ((.def_72 (not .def_71))) (let ((.def_73 (* (/ 321536719156353 4503599627370496) x7))) (let ((.def_74 (* (/ 1525489778999721 4503599627370496) x3))) (let ((.def_75 (* (/ 159422751030295 281474976710656) x2))) (let ((.def_76 (* (- (/ 4247075178134957 4503599627370496)) x5))) (let ((.def_77 (* (/ 879838159228277 4503599627370496) x8))) (let ((.def_78 (* (/ 1543322872064051 4503599627370496) x0))) (let ((.def_79 (* (- (/ 529803224028573 562949953421312)) x6))) (let ((.def_80 (* (- (/ 2570846641738813 4503599627370496)) x9))) (let ((.def_81 (* (/ 1617200660913641 4503599627370496) x4))) (let ((.def_82 (* (- (/ 470580418920777 562949953421312)) x1))) (let ((.def_83 (+ .def_82 .def_81 .def_80 .def_79 .def_78 .def_77 .def_76 .def_75 .def_74 .def_73))) (let ((.def_84 (< .def_83 (- (/ 4465384014830249 562949953421312))))) (let ((.def_85 (not A3))) (let ((.def_86 (and .def_85 .def_84))) (let ((.def_87 (or .def_86 .def_72))) (let ((.def_88 (not .def_87))) (let ((.def_89 (and .def_88 .def_70))) (let ((.def_90 (not .def_89))) (let ((.def_91 (or .def_90 .def_40))) (let ((.def_92 (<= x9 1.0))) (let ((.def_93 (<= 0.0 x9))) (let ((.def_94 (<= x8 1.0))) (let ((.def_95 (<= 0.0 x8))) (let ((.def_96 (<= x7 1.0))) (let ((.def_97 (<= 0.0 x7))) (let ((.def_98 (<= x6 1.0))) (let ((.def_99 (<= 0.0 x6))) (let ((.def_100 (<= x5 1.0))) (let ((.def_101 (<= 0.0 x5))) (let ((.def_102 (<= x4 1.0))) (let ((.def_103 (<= 0.0 x4))) (let ((.def_104 (<= x3 1.0))) (let ((.def_105 (<= 0.0 x3))) (let ((.def_106 (<= x2 1.0))) (let ((.def_107 (<= 0.0 x2))) (let ((.def_108 (<= x1 1.0))) (let ((.def_109 (<= 0.0 x1))) (let ((.def_110 (<= x0 1.0))) (let ((.def_111 (<= 0.0 x0))) (let ((.def_112 (and .def_111 .def_110 .def_109 .def_108 .def_107 .def_106 .def_105 .def_104 .def_103 .def_102 .def_101 .def_100 .def_99 .def_98 .def_97 .def_96 .def_95 .def_94 .def_93 .def_92 .def_91))) .def_112))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
