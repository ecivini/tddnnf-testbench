(set-logic QF_LIA)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun A0 () Bool)
(declare-fun A1 () Bool)
(declare-fun A2 () Bool)
(declare-fun A3 () Bool)
(declare-fun A6 () Bool)
(declare-fun A8 () Bool)
(declare-fun A9 () Bool)
(assert (let ((.def_0 (not A1))) (let ((.def_1 (* (- 1) x7))) (let ((.def_2 (* (- 1) x2))) (let ((.def_3 (+ .def_2 .def_1))) (let ((.def_4 (< .def_3 1))) (let ((.def_5 (not .def_4))) (let ((.def_6 (or .def_5 .def_0))) (let ((.def_7 (* (- 1) x6))) (let ((.def_8 (* 1 x7))) (let ((.def_9 (+ .def_8 .def_7))) (let ((.def_10 (< .def_9 1))) (let ((.def_11 (and .def_10 .def_0))) (let ((.def_12 (or .def_11 .def_6))) (let ((.def_13 (and A1 A8))) (let ((.def_14 (not .def_13))) (let ((.def_15 (< .def_8 1))) (let ((.def_16 (< .def_7 (- 1)))) (let ((.def_17 (or .def_16 .def_15))) (let ((.def_18 (not .def_17))) (let ((.def_19 (and .def_18 .def_14))) (let ((.def_20 (= .def_19 .def_12))) (let ((.def_21 (not .def_20))) (let ((.def_22 (and A0 A6))) (let ((.def_23 (not A6))) (let ((.def_24 (not A2))) (let ((.def_25 (and .def_24 .def_23))) (let ((.def_26 (not .def_25))) (let ((.def_27 (and .def_26 .def_22))) (let ((.def_28 (not .def_27))) (let ((.def_29 (< .def_8 (- 1)))) (let ((.def_30 (not .def_29))) (let ((.def_31 (or A2 .def_30))) (let ((.def_32 (not .def_31))) (let ((.def_33 (not A9))) (let ((.def_34 (and .def_33 A3))) (let ((.def_35 (and .def_34 .def_32))) (let ((.def_36 (and .def_35 .def_28))) (let ((.def_37 (or .def_36 .def_21))) (let ((.def_38 (<= x9 1))) (let ((.def_39 (<= 0 x9))) (let ((.def_40 (<= x8 1))) (let ((.def_41 (<= 0 x8))) (let ((.def_42 (<= x7 1))) (let ((.def_43 (<= 0 x7))) (let ((.def_44 (<= x6 1))) (let ((.def_45 (<= 0 x6))) (let ((.def_46 (<= x5 1))) (let ((.def_47 (<= 0 x5))) (let ((.def_48 (<= x4 1))) (let ((.def_49 (<= 0 x4))) (let ((.def_50 (<= x3 1))) (let ((.def_51 (<= 0 x3))) (let ((.def_52 (<= x2 1))) (let ((.def_53 (<= 0 x2))) (let ((.def_54 (<= x1 1))) (let ((.def_55 (<= 0 x1))) (let ((.def_56 (<= x0 1))) (let ((.def_57 (<= 0 x0))) (let ((.def_58 (and .def_57 .def_56 .def_55 .def_54 .def_53 .def_52 .def_51 .def_50 .def_49 .def_48 .def_47 .def_46 .def_45 .def_44 .def_43 .def_42 .def_41 .def_40 .def_39 .def_38 .def_37))) .def_58))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
