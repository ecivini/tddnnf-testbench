(set-logic QF_LIA)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun A0 () Bool)
(declare-fun A1 () Bool)
(declare-fun A2 () Bool)
(declare-fun A4 () Bool)
(declare-fun A5 () Bool)
(declare-fun A6 () Bool)
(declare-fun A8 () Bool)
(declare-fun A9 () Bool)
(assert (let ((.def_0 (* 1 x9))) (let ((.def_1 (< .def_0 (- 1)))) (let ((.def_2 (and A9 .def_1))) (let ((.def_3 (* 1 x5))) (let ((.def_4 (* (- 1) x8))) (let ((.def_5 (+ .def_4 .def_3))) (let ((.def_6 (< .def_5 (- 1)))) (let ((.def_7 (not .def_6))) (let ((.def_8 (and .def_7 A4))) (let ((.def_9 (or .def_8 .def_2))) (let ((.def_10 (not .def_9))) (let ((.def_11 (or A2 A1))) (let ((.def_12 (not .def_11))) (let ((.def_13 (* (- 1) x4))) (let ((.def_14 (< .def_13 1))) (let ((.def_15 (and .def_14 A0))) (let ((.def_16 (not .def_15))) (let ((.def_17 (or .def_16 .def_12))) (let ((.def_18 (not .def_17))) (let ((.def_19 (and .def_18 .def_10))) (let ((.def_20 (not A8))) (let ((.def_21 (or A1 .def_20))) (let ((.def_22 (not A0))) (let ((.def_23 (or A0 .def_22))) (let ((.def_24 (not .def_23))) (let ((.def_25 (or .def_24 .def_21))) (let ((.def_26 (or A6 .def_20))) (let ((.def_27 (not A5))) (let ((.def_28 (and .def_27 A6))) (let ((.def_29 (not .def_28))) (let ((.def_30 (and .def_29 .def_26))) (let ((.def_31 (not .def_30))) (let ((.def_32 (and .def_31 .def_25))) (let ((.def_33 (and .def_32 .def_19))) (let ((.def_34 (<= x9 1))) (let ((.def_35 (<= 0 x9))) (let ((.def_36 (<= x8 1))) (let ((.def_37 (<= 0 x8))) (let ((.def_38 (<= x7 1))) (let ((.def_39 (<= 0 x7))) (let ((.def_40 (<= x6 1))) (let ((.def_41 (<= 0 x6))) (let ((.def_42 (<= x5 1))) (let ((.def_43 (<= 0 x5))) (let ((.def_44 (<= x4 1))) (let ((.def_45 (<= 0 x4))) (let ((.def_46 (<= x3 1))) (let ((.def_47 (<= 0 x3))) (let ((.def_48 (<= x2 1))) (let ((.def_49 (<= 0 x2))) (let ((.def_50 (<= x1 1))) (let ((.def_51 (<= 0 x1))) (let ((.def_52 (<= x0 1))) (let ((.def_53 (<= 0 x0))) (let ((.def_54 (and .def_53 .def_52 .def_51 .def_50 .def_49 .def_48 .def_47 .def_46 .def_45 .def_44 .def_43 .def_42 .def_41 .def_40 .def_39 .def_38 .def_37 .def_36 .def_35 .def_34 .def_33))) .def_54))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
