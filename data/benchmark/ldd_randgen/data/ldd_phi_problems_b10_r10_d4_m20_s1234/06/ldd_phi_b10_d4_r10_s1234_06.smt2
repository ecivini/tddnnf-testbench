(set-logic QF_LIA)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun A0 () Bool)
(declare-fun A1 () Bool)
(declare-fun A2 () Bool)
(declare-fun A5 () Bool)
(declare-fun A6 () Bool)
(declare-fun A8 () Bool)
(assert (let ((.def_0 (not A0))) (let ((.def_1 (or .def_0 A5))) (let ((.def_2 (not .def_1))) (let ((.def_3 (not A1))) (let ((.def_4 (and .def_3 A5))) (let ((.def_5 (not .def_4))) (let ((.def_6 (or .def_5 .def_2))) (let ((.def_7 (* 1 x9))) (let ((.def_8 (< .def_7 1))) (let ((.def_9 (not .def_8))) (let ((.def_10 (or A0 .def_9))) (let ((.def_11 (and A8 A1))) (let ((.def_12 (= .def_11 .def_10))) (let ((.def_13 (= .def_12 .def_6))) (let ((.def_14 (* 1 x6))) (let ((.def_15 (< .def_14 (- 1)))) (let ((.def_16 (or .def_15 A1))) (let ((.def_17 (not .def_16))) (let ((.def_18 (not A2))) (let ((.def_19 (or .def_18 A0))) (let ((.def_20 (and .def_19 .def_17))) (let ((.def_21 (not .def_20))) (let ((.def_22 (* 1 x7))) (let ((.def_23 (* 1 x5))) (let ((.def_24 (+ .def_23 .def_22))) (let ((.def_25 (< .def_24 (- 1)))) (let ((.def_26 (not .def_25))) (let ((.def_27 (and .def_26 A6))) (let ((.def_28 (and .def_0 .def_18))) (let ((.def_29 (not .def_28))) (let ((.def_30 (or .def_29 .def_27))) (let ((.def_31 (or .def_30 .def_21))) (let ((.def_32 (not .def_31))) (let ((.def_33 (or .def_32 .def_13))) (let ((.def_34 (not .def_33))) (let ((.def_35 (<= x9 1))) (let ((.def_36 (<= 0 x9))) (let ((.def_37 (<= x8 1))) (let ((.def_38 (<= 0 x8))) (let ((.def_39 (<= x7 1))) (let ((.def_40 (<= 0 x7))) (let ((.def_41 (<= x6 1))) (let ((.def_42 (<= 0 x6))) (let ((.def_43 (<= x5 1))) (let ((.def_44 (<= 0 x5))) (let ((.def_45 (<= x4 1))) (let ((.def_46 (<= 0 x4))) (let ((.def_47 (<= x3 1))) (let ((.def_48 (<= 0 x3))) (let ((.def_49 (<= x2 1))) (let ((.def_50 (<= 0 x2))) (let ((.def_51 (<= x1 1))) (let ((.def_52 (<= 0 x1))) (let ((.def_53 (<= x0 1))) (let ((.def_54 (<= 0 x0))) (let ((.def_55 (and .def_54 .def_53 .def_52 .def_51 .def_50 .def_49 .def_48 .def_47 .def_46 .def_45 .def_44 .def_43 .def_42 .def_41 .def_40 .def_39 .def_38 .def_37 .def_36 .def_35 .def_34))) .def_55)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
