(set-logic QF_LIA)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun A0 () Bool)
(declare-fun A1 () Bool)
(declare-fun A2 () Bool)
(declare-fun A3 () Bool)
(declare-fun A9 () Bool)
(assert (let ((.def_0 (* (- 1) x0))) (let ((.def_1 (* 1 x7))) (let ((.def_2 (+ .def_1 .def_0))) (let ((.def_3 (< .def_2 (- 1)))) (let ((.def_4 (not .def_3))) (let ((.def_5 (* 1 x3))) (let ((.def_6 (< .def_5 (- 1)))) (let ((.def_7 (not .def_6))) (let ((.def_8 (or .def_7 .def_4))) (let ((.def_9 (not A0))) (let ((.def_10 (* (- 1) x1))) (let ((.def_11 (+ .def_1 .def_10))) (let ((.def_12 (< .def_11 (- 1)))) (let ((.def_13 (or .def_12 .def_9))) (let ((.def_14 (not .def_13))) (let ((.def_15 (and .def_14 .def_8))) (let ((.def_16 (* (- 1) x5))) (let ((.def_17 (* (- 1) x3))) (let ((.def_18 (+ .def_17 .def_16))) (let ((.def_19 (< .def_18 1))) (let ((.def_20 (* (- 1) x2))) (let ((.def_21 (* 1 x9))) (let ((.def_22 (+ .def_21 .def_20))) (let ((.def_23 (< .def_22 (- 1)))) (let ((.def_24 (or .def_23 .def_19))) (let ((.def_25 (not A9))) (let ((.def_26 (or .def_25 A3))) (let ((.def_27 (and .def_26 .def_24))) (let ((.def_28 (and .def_27 .def_15))) (let ((.def_29 (not A1))) (let ((.def_30 (* (- 1) x8))) (let ((.def_31 (+ .def_30 .def_0))) (let ((.def_32 (< .def_31 1))) (let ((.def_33 (or .def_32 .def_29))) (let ((.def_34 (not .def_33))) (let ((.def_35 (* (- 1) x7))) (let ((.def_36 (+ .def_17 .def_35))) (let ((.def_37 (< .def_36 (- 1)))) (let ((.def_38 (and A0 .def_37))) (let ((.def_39 (or .def_38 .def_34))) (let ((.def_40 (not .def_39))) (let ((.def_41 (< .def_20 1))) (let ((.def_42 (not .def_41))) (let ((.def_43 (* 1 x2))) (let ((.def_44 (* (- 1) x4))) (let ((.def_45 (+ .def_44 .def_43))) (let ((.def_46 (< .def_45 (- 1)))) (let ((.def_47 (and .def_46 .def_42))) (let ((.def_48 (not .def_47))) (let ((.def_49 (not A2))) (let ((.def_50 (and A2 .def_49))) (let ((.def_51 (and .def_50 .def_48))) (let ((.def_52 (not .def_51))) (let ((.def_53 (or .def_52 .def_40))) (let ((.def_54 (not .def_53))) (let ((.def_55 (or .def_54 .def_28))) (let ((.def_56 (not .def_55))) (let ((.def_57 (<= x9 1))) (let ((.def_58 (<= 0 x9))) (let ((.def_59 (<= x8 1))) (let ((.def_60 (<= 0 x8))) (let ((.def_61 (<= x7 1))) (let ((.def_62 (<= 0 x7))) (let ((.def_63 (<= x6 1))) (let ((.def_64 (<= 0 x6))) (let ((.def_65 (<= x5 1))) (let ((.def_66 (<= 0 x5))) (let ((.def_67 (<= x4 1))) (let ((.def_68 (<= 0 x4))) (let ((.def_69 (<= x3 1))) (let ((.def_70 (<= 0 x3))) (let ((.def_71 (<= x2 1))) (let ((.def_72 (<= 0 x2))) (let ((.def_73 (<= x1 1))) (let ((.def_74 (<= 0 x1))) (let ((.def_75 (<= x0 1))) (let ((.def_76 (<= 0 x0))) (let ((.def_77 (and .def_76 .def_75 .def_74 .def_73 .def_72 .def_71 .def_70 .def_69 .def_68 .def_67 .def_66 .def_65 .def_64 .def_63 .def_62 .def_61 .def_60 .def_59 .def_58 .def_57 .def_56))) .def_77)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
