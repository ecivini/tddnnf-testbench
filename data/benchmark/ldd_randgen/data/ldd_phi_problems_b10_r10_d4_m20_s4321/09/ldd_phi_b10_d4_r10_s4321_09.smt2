(set-logic QF_LIA)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun A0 () Bool)
(declare-fun A1 () Bool)
(declare-fun A2 () Bool)
(declare-fun A3 () Bool)
(declare-fun A6 () Bool)
(assert (let ((.def_0 (not A6))) (let ((.def_1 (not A1))) (let ((.def_2 (or .def_1 .def_0))) (let ((.def_3 (* 1 x3))) (let ((.def_4 (< .def_3 (- 1)))) (let ((.def_5 (= .def_4 A3))) (let ((.def_6 (not .def_5))) (let ((.def_7 (or .def_6 .def_2))) (let ((.def_8 (not .def_7))) (let ((.def_9 (not A0))) (let ((.def_10 (not A3))) (let ((.def_11 (or .def_10 .def_9))) (let ((.def_12 (not .def_11))) (let ((.def_13 (* 1 x8))) (let ((.def_14 (< .def_13 1))) (let ((.def_15 (or .def_14 A1))) (let ((.def_16 (or .def_15 .def_12))) (let ((.def_17 (or .def_16 .def_8))) (let ((.def_18 (* (- 1) x2))) (let ((.def_19 (+ .def_13 .def_18))) (let ((.def_20 (< .def_19 1))) (let ((.def_21 (or A2 .def_20))) (let ((.def_22 (not .def_21))) (let ((.def_23 (* (- 1) x7))) (let ((.def_24 (* (- 1) x5))) (let ((.def_25 (+ .def_24 .def_23))) (let ((.def_26 (< .def_25 (- 1)))) (let ((.def_27 (and .def_1 .def_26))) (let ((.def_28 (or .def_27 .def_22))) (let ((.def_29 (* 1 x5))) (let ((.def_30 (< .def_29 1))) (let ((.def_31 (* (- 1) x8))) (let ((.def_32 (< .def_31 1))) (let ((.def_33 (or .def_32 .def_30))) (let ((.def_34 (not .def_33))) (let ((.def_35 (* 1 x2))) (let ((.def_36 (< .def_35 (- 1)))) (let ((.def_37 (not .def_36))) (let ((.def_38 (* 1 x7))) (let ((.def_39 (< .def_38 1))) (let ((.def_40 (not .def_39))) (let ((.def_41 (and .def_40 .def_37))) (let ((.def_42 (not .def_41))) (let ((.def_43 (or .def_42 .def_34))) (let ((.def_44 (or .def_43 .def_28))) (let ((.def_45 (and .def_44 .def_17))) (let ((.def_46 (not .def_45))) (let ((.def_47 (<= x9 1))) (let ((.def_48 (<= 0 x9))) (let ((.def_49 (<= x8 1))) (let ((.def_50 (<= 0 x8))) (let ((.def_51 (<= x7 1))) (let ((.def_52 (<= 0 x7))) (let ((.def_53 (<= x6 1))) (let ((.def_54 (<= 0 x6))) (let ((.def_55 (<= x5 1))) (let ((.def_56 (<= 0 x5))) (let ((.def_57 (<= x4 1))) (let ((.def_58 (<= 0 x4))) (let ((.def_59 (<= x3 1))) (let ((.def_60 (<= 0 x3))) (let ((.def_61 (<= x2 1))) (let ((.def_62 (<= 0 x2))) (let ((.def_63 (<= x1 1))) (let ((.def_64 (<= 0 x1))) (let ((.def_65 (<= x0 1))) (let ((.def_66 (<= 0 x0))) (let ((.def_67 (and .def_66 .def_65 .def_64 .def_63 .def_62 .def_61 .def_60 .def_59 .def_58 .def_57 .def_56 .def_55 .def_54 .def_53 .def_52 .def_51 .def_50 .def_49 .def_48 .def_47 .def_46))) .def_67)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
