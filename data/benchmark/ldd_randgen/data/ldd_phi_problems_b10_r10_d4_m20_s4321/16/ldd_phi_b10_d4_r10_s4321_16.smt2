(set-logic QF_LIA)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun A0 () Bool)
(declare-fun A1 () Bool)
(declare-fun A2 () Bool)
(declare-fun A4 () Bool)
(declare-fun A5 () Bool)
(declare-fun A6 () Bool)
(declare-fun A8 () Bool)
(assert (let ((.def_0 (and A2 A2))) (let ((.def_1 (= A1 A4))) (let ((.def_2 (not .def_1))) (let ((.def_3 (or .def_2 .def_0))) (let ((.def_4 (* (- 1) x3))) (let ((.def_5 (* 1 x0))) (let ((.def_6 (+ .def_5 .def_4))) (let ((.def_7 (< .def_6 1))) (let ((.def_8 (* (- 1) x2))) (let ((.def_9 (+ .def_8 .def_5))) (let ((.def_10 (< .def_9 (- 1)))) (let ((.def_11 (or .def_10 .def_7))) (let ((.def_12 (not .def_11))) (let ((.def_13 (* 1 x5))) (let ((.def_14 (+ .def_13 .def_8))) (let ((.def_15 (< .def_14 (- 1)))) (let ((.def_16 (= .def_15 A8))) (let ((.def_17 (or .def_16 .def_12))) (let ((.def_18 (and .def_17 .def_3))) (let ((.def_19 (not .def_18))) (let ((.def_20 (not A0))) (let ((.def_21 (and .def_20 A5))) (let ((.def_22 (not .def_21))) (let ((.def_23 (not A8))) (let ((.def_24 (* 1 x3))) (let ((.def_25 (+ .def_24 .def_5))) (let ((.def_26 (< .def_25 1))) (let ((.def_27 (not .def_26))) (let ((.def_28 (and .def_27 .def_23))) (let ((.def_29 (or .def_28 .def_22))) (let ((.def_30 (not .def_29))) (let ((.def_31 (* 1 x8))) (let ((.def_32 (< .def_31 1))) (let ((.def_33 (not .def_32))) (let ((.def_34 (and .def_33 A6))) (let ((.def_35 (not A4))) (let ((.def_36 (and .def_35 .def_23))) (let ((.def_37 (not .def_36))) (let ((.def_38 (or .def_37 .def_34))) (let ((.def_39 (or .def_38 .def_30))) (let ((.def_40 (or .def_39 .def_19))) (let ((.def_41 (<= x9 1))) (let ((.def_42 (<= 0 x9))) (let ((.def_43 (<= x8 1))) (let ((.def_44 (<= 0 x8))) (let ((.def_45 (<= x7 1))) (let ((.def_46 (<= 0 x7))) (let ((.def_47 (<= x6 1))) (let ((.def_48 (<= 0 x6))) (let ((.def_49 (<= x5 1))) (let ((.def_50 (<= 0 x5))) (let ((.def_51 (<= x4 1))) (let ((.def_52 (<= 0 x4))) (let ((.def_53 (<= x3 1))) (let ((.def_54 (<= 0 x3))) (let ((.def_55 (<= x2 1))) (let ((.def_56 (<= 0 x2))) (let ((.def_57 (<= x1 1))) (let ((.def_58 (<= 0 x1))) (let ((.def_59 (<= x0 1))) (let ((.def_60 (<= 0 x0))) (let ((.def_61 (and .def_60 .def_59 .def_58 .def_57 .def_56 .def_55 .def_54 .def_53 .def_52 .def_51 .def_50 .def_49 .def_48 .def_47 .def_46 .def_45 .def_44 .def_43 .def_42 .def_41 .def_40))) .def_61)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
